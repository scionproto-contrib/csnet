/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: proto/control_plane/v1/seg.proto */

#ifndef PROTOBUF_C_proto_2fcontrol_5fplane_2fv1_2fseg_2eproto__INCLUDED
#define PROTOBUF_C_proto_2fcontrol_5fplane_2fv1_2fseg_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "proto/control_plane/v1/seg_extensions.pb-c.h"
#include "proto/crypto/v1/signed.pb-c.h"

typedef struct _Proto__ControlPlane__V1__SegmentsRequest Proto__ControlPlane__V1__SegmentsRequest;
typedef struct _Proto__ControlPlane__V1__SegmentsResponse Proto__ControlPlane__V1__SegmentsResponse;
typedef struct _Proto__ControlPlane__V1__SegmentsResponse__Segments Proto__ControlPlane__V1__SegmentsResponse__Segments;
typedef struct _Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry
	Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry;
typedef struct _Proto__ControlPlane__V1__SegmentsRegistrationRequest
	Proto__ControlPlane__V1__SegmentsRegistrationRequest;
typedef struct _Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments
	Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments;
typedef struct _Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry
	Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry;
typedef struct _Proto__ControlPlane__V1__SegmentsRegistrationResponse
	Proto__ControlPlane__V1__SegmentsRegistrationResponse;
typedef struct _Proto__ControlPlane__V1__BeaconRequest Proto__ControlPlane__V1__BeaconRequest;
typedef struct _Proto__ControlPlane__V1__BeaconResponse Proto__ControlPlane__V1__BeaconResponse;
typedef struct _Proto__ControlPlane__V1__PathSegment Proto__ControlPlane__V1__PathSegment;
typedef struct _Proto__ControlPlane__V1__SegmentInformation Proto__ControlPlane__V1__SegmentInformation;
typedef struct _Proto__ControlPlane__V1__ASEntry Proto__ControlPlane__V1__ASEntry;
typedef struct _Proto__ControlPlane__V1__ASEntrySignedBody Proto__ControlPlane__V1__ASEntrySignedBody;
typedef struct _Proto__ControlPlane__V1__HopEntry Proto__ControlPlane__V1__HopEntry;
typedef struct _Proto__ControlPlane__V1__PeerEntry Proto__ControlPlane__V1__PeerEntry;
typedef struct _Proto__ControlPlane__V1__HopField Proto__ControlPlane__V1__HopField;

/* --- enums --- */

typedef enum _Proto__ControlPlane__V1__SegmentType {
	/*
	 * Unknown segemnt type.
	 */
	PROTO__CONTROL_PLANE__V1__SEGMENT_TYPE__SEGMENT_TYPE_UNSPECIFIED = 0,
	/*
	 * Up segment.
	 */
	PROTO__CONTROL_PLANE__V1__SEGMENT_TYPE__SEGMENT_TYPE_UP = 1,
	/*
	 * Down segment.
	 */
	PROTO__CONTROL_PLANE__V1__SEGMENT_TYPE__SEGMENT_TYPE_DOWN = 2,
	/*
	 * Core segment.
	 */
	PROTO__CONTROL_PLANE__V1__SEGMENT_TYPE__SEGMENT_TYPE_CORE = 3 PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(
		PROTO__CONTROL_PLANE__V1__SEGMENT_TYPE)
} Proto__ControlPlane__V1__SegmentType;

/* --- messages --- */

struct _Proto__ControlPlane__V1__SegmentsRequest {
	ProtobufCMessage base;
	/*
	 * The source ISD-AS of the segment.
	 */
	uint64_t src_isd_as;
	/*
	 * The destination ISD-AS of the segment.
	 */
	uint64_t dst_isd_as;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_REQUEST__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_request__descriptor), 0, 0 }

struct _Proto__ControlPlane__V1__SegmentsResponse__Segments {
	ProtobufCMessage base;
	/*
	 * List of path segments.
	 */
	size_t n_segments;
	Proto__ControlPlane__V1__PathSegment **segments;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_RESPONSE__SEGMENTS__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_response__segments__descriptor), 0, NULL }

struct _Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry {
	ProtobufCMessage base;
	int32_t key;
	Proto__ControlPlane__V1__SegmentsResponse__Segments *value;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_RESPONSE__SEGMENTS_ENTRY__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_response__segments_entry__descriptor), 0, NULL }

struct _Proto__ControlPlane__V1__SegmentsResponse {
	ProtobufCMessage base;
	/*
	 * Mapping from path segment type to path segments. The key is the integer
	 * representation of the scion_segment_type enum.
	 */
	size_t n_segments;
	Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry **segments;
	/*
	 * Deprecated list of signed revocations. Will be removed with header v1.
	 */
	size_t n_deprecated_signed_revocations;
	ProtobufCBinaryData *deprecated_signed_revocations;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_RESPONSE__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_response__descriptor), 0, NULL, 0, NULL }

struct _Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments {
	ProtobufCMessage base;
	/*
	 * List of path segments.
	 */
	size_t n_segments;
	Proto__ControlPlane__V1__PathSegment **segments;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_REGISTRATION_REQUEST__SEGMENTS__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_registration_request__segments__descriptor), 0, NULL }

struct _Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry {
	ProtobufCMessage base;
	int32_t key;
	Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments *value;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_REGISTRATION_REQUEST__SEGMENTS_ENTRY__INIT                                \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_registration_request__segments_entry__descriptor), \
		0, NULL }

struct _Proto__ControlPlane__V1__SegmentsRegistrationRequest {
	ProtobufCMessage base;
	/*
	 * Mapping from path segment type to path segments. The key is the integer
	 * representation of the scion_segment_type enum.
	 */
	size_t n_segments;
	Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry **segments;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_REGISTRATION_REQUEST__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_registration_request__descriptor), 0, NULL }

struct _Proto__ControlPlane__V1__SegmentsRegistrationResponse {
	ProtobufCMessage base;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENTS_REGISTRATION_RESPONSE__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segments_registration_response__descriptor) }

struct _Proto__ControlPlane__V1__BeaconRequest {
	ProtobufCMessage base;
	/*
	 * Beacon in form of a partial path segment.
	 */
	Proto__ControlPlane__V1__PathSegment *segment;
};
#define PROTO__CONTROL_PLANE__V1__BEACON_REQUEST__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__beacon_request__descriptor), NULL }

struct _Proto__ControlPlane__V1__BeaconResponse {
	ProtobufCMessage base;
};
#define PROTO__CONTROL_PLANE__V1__BEACON_RESPONSE__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__beacon_response__descriptor) }

struct _Proto__ControlPlane__V1__PathSegment {
	ProtobufCMessage base;
	/*
	 * The encoded SegmentInformation. It is used for signature input.
	 */
	ProtobufCBinaryData segment_info;
	/*
	 * Entries of ASes on the path.
	 */
	size_t n_as_entries;
	Proto__ControlPlane__V1__ASEntry **as_entries;
};
#define PROTO__CONTROL_PLANE__V1__PATH_SEGMENT__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__path_segment__descriptor), { 0, NULL }, 0, NULL }

struct _Proto__ControlPlane__V1__SegmentInformation {
	ProtobufCMessage base;
	/*
	 * Segment creation time set by the originating AS. Segment expiration time
	 * is computed relative to this timestamp. The timestamp is encoded as
	 * number of seconds elapsed since January 1, 1970 UTC.
	 */
	int64_t timestamp;
	/*
	 * The 16-bit segment ID integer used for MAC computation.
	 */
	uint32_t segment_id;
};
#define PROTO__CONTROL_PLANE__V1__SEGMENT_INFORMATION__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__segment_information__descriptor), 0, 0 }

struct _Proto__ControlPlane__V1__ASEntry {
	ProtobufCMessage base;
	/*
	 * The signed part of the AS entry. The body of the SignedMessage is the
	 * serialized ASEntrySignedBody. The signature input is defined as following:
	 *  input(ps, i) = signed.header_and_body || associated_data(ps, i)
	 *  associated_data(ps, i) = ps.segment_info ||
	 *                           ps.as_entries[1].signed.header_and_body ||
	 *                           ps.as_entries[1].signed.signature ||
	 *                           ...
	 *                           ps.as_entries[i-1].signed.header_and_body ||
	 *                           ps.as_entries[i-1].signed.signature
	 */
	Proto__Crypto__V1__SignedMessage *signed_;
	/*
	 * The unsigned part of the AS entry.
	 */
	Proto__ControlPlane__V1__PathSegmentUnsignedExtensions *unsigned_;
};
#define PROTO__CONTROL_PLANE__V1__ASENTRY__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__asentry__descriptor), NULL, NULL }

struct _Proto__ControlPlane__V1__ASEntrySignedBody {
	ProtobufCMessage base;
	/*
	 * ISD-AS of the AS that created this AS entry.
	 */
	uint64_t isd_as;
	/*
	 * ISD-AS of the downstream AS.
	 */
	uint64_t next_isd_as;
	/*
	 * The required regular hop entry.
	 */
	Proto__ControlPlane__V1__HopEntry *hop_entry;
	/*
	 * Optional peer entries.
	 */
	size_t n_peer_entries;
	Proto__ControlPlane__V1__PeerEntry **peer_entries;
	/*
	 * Intra AS MTU.
	 */
	uint32_t mtu;
	/*
	 * Optional extensions.
	 */
	Proto__ControlPlane__V1__PathSegmentExtensions *extensions;
};
#define PROTO__CONTROL_PLANE__V1__ASENTRY_SIGNED_BODY__INIT                                                        \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__asentry_signed_body__descriptor), 0, 0, NULL, 0, NULL, 0, \
		NULL }

struct _Proto__ControlPlane__V1__HopEntry {
	ProtobufCMessage base;
	/*
	 * Material to create the data-plane hop field.
	 */
	Proto__ControlPlane__V1__HopField *hop_field;
	/*
	 * MTU on the ingress link.
	 */
	uint32_t ingress_mtu;
};
#define PROTO__CONTROL_PLANE__V1__HOP_ENTRY__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__hop_entry__descriptor), NULL, 0 }

struct _Proto__ControlPlane__V1__PeerEntry {
	ProtobufCMessage base;
	/*
	 * ISD-AS of peer AS. This is used to match peering segments during path
	 * construction.
	 */
	uint64_t peer_isd_as;
	/*
	 * Remote peer interface identifier. This is used to match peering segments
	 * during path construction.
	 */
	uint64_t peer_interface;
	/*
	 * MTU on the peering link.
	 */
	uint32_t peer_mtu;
	/*
	 * Material to create the data-plane hop field
	 */
	Proto__ControlPlane__V1__HopField *hop_field;
};
#define PROTO__CONTROL_PLANE__V1__PEER_ENTRY__INIT \
	{ PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__peer_entry__descriptor), 0, 0, 0, NULL }

struct _Proto__ControlPlane__V1__HopField {
	ProtobufCMessage base;
	/*
	 * Ingress interface identifier.
	 */
	uint64_t ingress;
	/*
	 * Egress interface identifier.
	 */
	uint64_t egress;
	/*
	 * 8-bit encoded expiration offset relative to the segment creation
	 * timestamp.
	 */
	uint32_t exp_time;
	/*
	 * MAC used in the dataplane to verify the hop field.
	 */
	ProtobufCBinaryData mac;
};
#define PROTO__CONTROL_PLANE__V1__HOP_FIELD__INIT                                 \
	{                                                                             \
		PROTOBUF_C_MESSAGE_INIT(&proto__control_plane__v1__hop_field__descriptor) \
		, 0, 0, 0,                                                                \
		{                                                                         \
			0, NULL                                                               \
		}                                                                         \
	}

/* Proto__ControlPlane__V1__SegmentsRequest methods */
void proto__control_plane__v1__segments_request__init(Proto__ControlPlane__V1__SegmentsRequest *message);
size_t proto__control_plane__v1__segments_request__get_packed_size(
	const Proto__ControlPlane__V1__SegmentsRequest *message);
size_t proto__control_plane__v1__segments_request__pack(
	const Proto__ControlPlane__V1__SegmentsRequest *message, uint8_t *out);
size_t proto__control_plane__v1__segments_request__pack_to_buffer(
	const Proto__ControlPlane__V1__SegmentsRequest *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__SegmentsRequest *proto__control_plane__v1__segments_request__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__segments_request__free_unpacked(
	Proto__ControlPlane__V1__SegmentsRequest *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__SegmentsResponse__Segments methods */
void proto__control_plane__v1__segments_response__segments__init(
	Proto__ControlPlane__V1__SegmentsResponse__Segments *message);
/* Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry methods */
void proto__control_plane__v1__segments_response__segments_entry__init(
	Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry *message);
/* Proto__ControlPlane__V1__SegmentsResponse methods */
void proto__control_plane__v1__segments_response__init(Proto__ControlPlane__V1__SegmentsResponse *message);
size_t proto__control_plane__v1__segments_response__get_packed_size(
	const Proto__ControlPlane__V1__SegmentsResponse *message);
size_t proto__control_plane__v1__segments_response__pack(
	const Proto__ControlPlane__V1__SegmentsResponse *message, uint8_t *out);
size_t proto__control_plane__v1__segments_response__pack_to_buffer(
	const Proto__ControlPlane__V1__SegmentsResponse *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__SegmentsResponse *proto__control_plane__v1__segments_response__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__segments_response__free_unpacked(
	Proto__ControlPlane__V1__SegmentsResponse *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments methods */
void proto__control_plane__v1__segments_registration_request__segments__init(
	Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments *message);
/* Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry methods */
void proto__control_plane__v1__segments_registration_request__segments_entry__init(
	Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry *message);
/* Proto__ControlPlane__V1__SegmentsRegistrationRequest methods */
void proto__control_plane__v1__segments_registration_request__init(
	Proto__ControlPlane__V1__SegmentsRegistrationRequest *message);
size_t proto__control_plane__v1__segments_registration_request__get_packed_size(
	const Proto__ControlPlane__V1__SegmentsRegistrationRequest *message);
size_t proto__control_plane__v1__segments_registration_request__pack(
	const Proto__ControlPlane__V1__SegmentsRegistrationRequest *message, uint8_t *out);
size_t proto__control_plane__v1__segments_registration_request__pack_to_buffer(
	const Proto__ControlPlane__V1__SegmentsRegistrationRequest *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__SegmentsRegistrationRequest *proto__control_plane__v1__segments_registration_request__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__segments_registration_request__free_unpacked(
	Proto__ControlPlane__V1__SegmentsRegistrationRequest *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__SegmentsRegistrationResponse methods */
void proto__control_plane__v1__segments_registration_response__init(
	Proto__ControlPlane__V1__SegmentsRegistrationResponse *message);
size_t proto__control_plane__v1__segments_registration_response__get_packed_size(
	const Proto__ControlPlane__V1__SegmentsRegistrationResponse *message);
size_t proto__control_plane__v1__segments_registration_response__pack(
	const Proto__ControlPlane__V1__SegmentsRegistrationResponse *message, uint8_t *out);
size_t proto__control_plane__v1__segments_registration_response__pack_to_buffer(
	const Proto__ControlPlane__V1__SegmentsRegistrationResponse *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__SegmentsRegistrationResponse *proto__control_plane__v1__segments_registration_response__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__segments_registration_response__free_unpacked(
	Proto__ControlPlane__V1__SegmentsRegistrationResponse *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__BeaconRequest methods */
void proto__control_plane__v1__beacon_request__init(Proto__ControlPlane__V1__BeaconRequest *message);
size_t proto__control_plane__v1__beacon_request__get_packed_size(const Proto__ControlPlane__V1__BeaconRequest *message);
size_t proto__control_plane__v1__beacon_request__pack(
	const Proto__ControlPlane__V1__BeaconRequest *message, uint8_t *out);
size_t proto__control_plane__v1__beacon_request__pack_to_buffer(
	const Proto__ControlPlane__V1__BeaconRequest *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__BeaconRequest *proto__control_plane__v1__beacon_request__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__beacon_request__free_unpacked(
	Proto__ControlPlane__V1__BeaconRequest *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__BeaconResponse methods */
void proto__control_plane__v1__beacon_response__init(Proto__ControlPlane__V1__BeaconResponse *message);
size_t proto__control_plane__v1__beacon_response__get_packed_size(
	const Proto__ControlPlane__V1__BeaconResponse *message);
size_t proto__control_plane__v1__beacon_response__pack(
	const Proto__ControlPlane__V1__BeaconResponse *message, uint8_t *out);
size_t proto__control_plane__v1__beacon_response__pack_to_buffer(
	const Proto__ControlPlane__V1__BeaconResponse *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__BeaconResponse *proto__control_plane__v1__beacon_response__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__beacon_response__free_unpacked(
	Proto__ControlPlane__V1__BeaconResponse *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__PathSegment methods */
void proto__control_plane__v1__path_segment__init(Proto__ControlPlane__V1__PathSegment *message);
size_t proto__control_plane__v1__path_segment__get_packed_size(const Proto__ControlPlane__V1__PathSegment *message);
size_t proto__control_plane__v1__path_segment__pack(const Proto__ControlPlane__V1__PathSegment *message, uint8_t *out);
size_t proto__control_plane__v1__path_segment__pack_to_buffer(
	const Proto__ControlPlane__V1__PathSegment *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__PathSegment *proto__control_plane__v1__path_segment__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__path_segment__free_unpacked(
	Proto__ControlPlane__V1__PathSegment *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__SegmentInformation methods */
void proto__control_plane__v1__segment_information__init(Proto__ControlPlane__V1__SegmentInformation *message);
size_t proto__control_plane__v1__segment_information__get_packed_size(
	const Proto__ControlPlane__V1__SegmentInformation *message);
size_t proto__control_plane__v1__segment_information__pack(
	const Proto__ControlPlane__V1__SegmentInformation *message, uint8_t *out);
size_t proto__control_plane__v1__segment_information__pack_to_buffer(
	const Proto__ControlPlane__V1__SegmentInformation *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__SegmentInformation *proto__control_plane__v1__segment_information__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__segment_information__free_unpacked(
	Proto__ControlPlane__V1__SegmentInformation *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__ASEntry methods */
void proto__control_plane__v1__asentry__init(Proto__ControlPlane__V1__ASEntry *message);
size_t proto__control_plane__v1__asentry__get_packed_size(const Proto__ControlPlane__V1__ASEntry *message);
size_t proto__control_plane__v1__asentry__pack(const Proto__ControlPlane__V1__ASEntry *message, uint8_t *out);
size_t proto__control_plane__v1__asentry__pack_to_buffer(
	const Proto__ControlPlane__V1__ASEntry *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__ASEntry *proto__control_plane__v1__asentry__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__asentry__free_unpacked(
	Proto__ControlPlane__V1__ASEntry *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__ASEntrySignedBody methods */
void proto__control_plane__v1__asentry_signed_body__init(Proto__ControlPlane__V1__ASEntrySignedBody *message);
size_t proto__control_plane__v1__asentry_signed_body__get_packed_size(
	const Proto__ControlPlane__V1__ASEntrySignedBody *message);
size_t proto__control_plane__v1__asentry_signed_body__pack(
	const Proto__ControlPlane__V1__ASEntrySignedBody *message, uint8_t *out);
size_t proto__control_plane__v1__asentry_signed_body__pack_to_buffer(
	const Proto__ControlPlane__V1__ASEntrySignedBody *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__ASEntrySignedBody *proto__control_plane__v1__asentry_signed_body__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__asentry_signed_body__free_unpacked(
	Proto__ControlPlane__V1__ASEntrySignedBody *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__HopEntry methods */
void proto__control_plane__v1__hop_entry__init(Proto__ControlPlane__V1__HopEntry *message);
size_t proto__control_plane__v1__hop_entry__get_packed_size(const Proto__ControlPlane__V1__HopEntry *message);
size_t proto__control_plane__v1__hop_entry__pack(const Proto__ControlPlane__V1__HopEntry *message, uint8_t *out);
size_t proto__control_plane__v1__hop_entry__pack_to_buffer(
	const Proto__ControlPlane__V1__HopEntry *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__HopEntry *proto__control_plane__v1__hop_entry__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__hop_entry__free_unpacked(
	Proto__ControlPlane__V1__HopEntry *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__PeerEntry methods */
void proto__control_plane__v1__peer_entry__init(Proto__ControlPlane__V1__PeerEntry *message);
size_t proto__control_plane__v1__peer_entry__get_packed_size(const Proto__ControlPlane__V1__PeerEntry *message);
size_t proto__control_plane__v1__peer_entry__pack(const Proto__ControlPlane__V1__PeerEntry *message, uint8_t *out);
size_t proto__control_plane__v1__peer_entry__pack_to_buffer(
	const Proto__ControlPlane__V1__PeerEntry *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__PeerEntry *proto__control_plane__v1__peer_entry__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__peer_entry__free_unpacked(
	Proto__ControlPlane__V1__PeerEntry *message, ProtobufCAllocator *allocator);
/* Proto__ControlPlane__V1__HopField methods */
void proto__control_plane__v1__hop_field__init(Proto__ControlPlane__V1__HopField *message);
size_t proto__control_plane__v1__hop_field__get_packed_size(const Proto__ControlPlane__V1__HopField *message);
size_t proto__control_plane__v1__hop_field__pack(const Proto__ControlPlane__V1__HopField *message, uint8_t *out);
size_t proto__control_plane__v1__hop_field__pack_to_buffer(
	const Proto__ControlPlane__V1__HopField *message, ProtobufCBuffer *buffer);
Proto__ControlPlane__V1__HopField *proto__control_plane__v1__hop_field__unpack(
	ProtobufCAllocator *allocator, size_t len, const uint8_t *data);
void proto__control_plane__v1__hop_field__free_unpacked(
	Proto__ControlPlane__V1__HopField *message, ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__ControlPlane__V1__SegmentsRequest_Closure)(
	const Proto__ControlPlane__V1__SegmentsRequest *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentsResponse__Segments_Closure)(
	const Proto__ControlPlane__V1__SegmentsResponse__Segments *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry_Closure)(
	const Proto__ControlPlane__V1__SegmentsResponse__SegmentsEntry *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentsResponse_Closure)(
	const Proto__ControlPlane__V1__SegmentsResponse *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments_Closure)(
	const Proto__ControlPlane__V1__SegmentsRegistrationRequest__Segments *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry_Closure)(
	const Proto__ControlPlane__V1__SegmentsRegistrationRequest__SegmentsEntry *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentsRegistrationRequest_Closure)(
	const Proto__ControlPlane__V1__SegmentsRegistrationRequest *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentsRegistrationResponse_Closure)(
	const Proto__ControlPlane__V1__SegmentsRegistrationResponse *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__BeaconRequest_Closure)(
	const Proto__ControlPlane__V1__BeaconRequest *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__BeaconResponse_Closure)(
	const Proto__ControlPlane__V1__BeaconResponse *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__PathSegment_Closure)(
	const Proto__ControlPlane__V1__PathSegment *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__SegmentInformation_Closure)(
	const Proto__ControlPlane__V1__SegmentInformation *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__ASEntry_Closure)(
	const Proto__ControlPlane__V1__ASEntry *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__ASEntrySignedBody_Closure)(
	const Proto__ControlPlane__V1__ASEntrySignedBody *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__HopEntry_Closure)(
	const Proto__ControlPlane__V1__HopEntry *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__PeerEntry_Closure)(
	const Proto__ControlPlane__V1__PeerEntry *message, void *closure_data);
typedef void (*Proto__ControlPlane__V1__HopField_Closure)(
	const Proto__ControlPlane__V1__HopField *message, void *closure_data);

/* --- services --- */

typedef struct _Proto__ControlPlane__V1__SegmentLookupService_Service
	Proto__ControlPlane__V1__SegmentLookupService_Service;
struct _Proto__ControlPlane__V1__SegmentLookupService_Service {
	ProtobufCService base;
	void (*segments)(Proto__ControlPlane__V1__SegmentLookupService_Service *service,
		const Proto__ControlPlane__V1__SegmentsRequest *input,
		Proto__ControlPlane__V1__SegmentsResponse_Closure closure, void *closure_data);
};
typedef void (*Proto__ControlPlane__V1__SegmentLookupService_ServiceDestroy)(
	Proto__ControlPlane__V1__SegmentLookupService_Service *);
void proto__control_plane__v1__segment_lookup_service__init(
	Proto__ControlPlane__V1__SegmentLookupService_Service *service,
	Proto__ControlPlane__V1__SegmentLookupService_ServiceDestroy destroy);
#define PROTO__CONTROL_PLANE__V1__SEGMENT_LOOKUP_SERVICE__BASE_INIT \
	{ &proto__control_plane__v1__segment_lookup_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define PROTO__CONTROL_PLANE__V1__SEGMENT_LOOKUP_SERVICE__INIT(function_prefix__) \
	{ PROTO__CONTROL_PLANE__V1__SEGMENT_LOOKUP_SERVICE__BASE_INIT, function_prefix__##segments }
void proto__control_plane__v1__segment_lookup_service__segments(ProtobufCService *service,
	const Proto__ControlPlane__V1__SegmentsRequest *input, Proto__ControlPlane__V1__SegmentsResponse_Closure closure,
	void *closure_data);
typedef struct _Proto__ControlPlane__V1__SegmentRegistrationService_Service
	Proto__ControlPlane__V1__SegmentRegistrationService_Service;
struct _Proto__ControlPlane__V1__SegmentRegistrationService_Service {
	ProtobufCService base;
	void (*segments_registration)(Proto__ControlPlane__V1__SegmentRegistrationService_Service *service,
		const Proto__ControlPlane__V1__SegmentsRegistrationRequest *input,
		Proto__ControlPlane__V1__SegmentsRegistrationResponse_Closure closure, void *closure_data);
};
typedef void (*Proto__ControlPlane__V1__SegmentRegistrationService_ServiceDestroy)(
	Proto__ControlPlane__V1__SegmentRegistrationService_Service *);
void proto__control_plane__v1__segment_registration_service__init(
	Proto__ControlPlane__V1__SegmentRegistrationService_Service *service,
	Proto__ControlPlane__V1__SegmentRegistrationService_ServiceDestroy destroy);
#define PROTO__CONTROL_PLANE__V1__SEGMENT_REGISTRATION_SERVICE__BASE_INIT \
	{ &proto__control_plane__v1__segment_registration_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define PROTO__CONTROL_PLANE__V1__SEGMENT_REGISTRATION_SERVICE__INIT(function_prefix__) \
	{ PROTO__CONTROL_PLANE__V1__SEGMENT_REGISTRATION_SERVICE__BASE_INIT, function_prefix__##segments_registration }
void proto__control_plane__v1__segment_registration_service__segments_registration(ProtobufCService *service,
	const Proto__ControlPlane__V1__SegmentsRegistrationRequest *input,
	Proto__ControlPlane__V1__SegmentsRegistrationResponse_Closure closure, void *closure_data);
typedef struct _Proto__ControlPlane__V1__SegmentCreationService_Service
	Proto__ControlPlane__V1__SegmentCreationService_Service;
struct _Proto__ControlPlane__V1__SegmentCreationService_Service {
	ProtobufCService base;
	void (*beacon)(Proto__ControlPlane__V1__SegmentCreationService_Service *service,
		const Proto__ControlPlane__V1__BeaconRequest *input, Proto__ControlPlane__V1__BeaconResponse_Closure closure,
		void *closure_data);
};
typedef void (*Proto__ControlPlane__V1__SegmentCreationService_ServiceDestroy)(
	Proto__ControlPlane__V1__SegmentCreationService_Service *);
void proto__control_plane__v1__segment_creation_service__init(
	Proto__ControlPlane__V1__SegmentCreationService_Service *service,
	Proto__ControlPlane__V1__SegmentCreationService_ServiceDestroy destroy);
#define PROTO__CONTROL_PLANE__V1__SEGMENT_CREATION_SERVICE__BASE_INIT \
	{ &proto__control_plane__v1__segment_creation_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define PROTO__CONTROL_PLANE__V1__SEGMENT_CREATION_SERVICE__INIT(function_prefix__) \
	{ PROTO__CONTROL_PLANE__V1__SEGMENT_CREATION_SERVICE__BASE_INIT, function_prefix__##beacon }
void proto__control_plane__v1__segment_creation_service__beacon(ProtobufCService *service,
	const Proto__ControlPlane__V1__BeaconRequest *input, Proto__ControlPlane__V1__BeaconResponse_Closure closure,
	void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor proto__control_plane__v1__segment_type__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segments_request__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segments_response__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segments_response__segments__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segments_response__segments_entry__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segments_registration_request__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segments_registration_request__segments__descriptor;
extern const ProtobufCMessageDescriptor
	proto__control_plane__v1__segments_registration_request__segments_entry__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segments_registration_response__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__beacon_request__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__beacon_response__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__path_segment__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__segment_information__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__asentry__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__asentry_signed_body__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__hop_entry__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__peer_entry__descriptor;
extern const ProtobufCMessageDescriptor proto__control_plane__v1__hop_field__descriptor;
extern const ProtobufCServiceDescriptor proto__control_plane__v1__segment_lookup_service__descriptor;
extern const ProtobufCServiceDescriptor proto__control_plane__v1__segment_registration_service__descriptor;
extern const ProtobufCServiceDescriptor proto__control_plane__v1__segment_creation_service__descriptor;

PROTOBUF_C__END_DECLS

#endif /* PROTOBUF_C_proto_2fcontrol_5fplane_2fv1_2fseg_2eproto__INCLUDED */
